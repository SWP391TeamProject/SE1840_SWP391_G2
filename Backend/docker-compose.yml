version: '3.8'
services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Y0urStr0ng!Passw0rd
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Y0urStr0ng!Passw0rd -Q 'SELECT 1' || exit 1" ]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
  sqlserver.configurator:
      image: mcr.microsoft.com/mssql/server:2019-latest
      volumes:
        - ./init:/docker-entrypoint-initdb.d
      depends_on:
        sqlserver:
          condition: service_healthy
      command: >
        bash -c '
        /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P Y0urStr0ng!Passw0rd -d master -i docker-entrypoint-initdb.d/init.sql;
        echo "All done!";
        '
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
       sqlserver.configurator:
          condition: service_completed_successfully
    environment:
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://sqlserver:1433;database=Biddify;encrypt=true;trustServerCertificate=true;loginTimeout=30;
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=Y0urStr0ng!Passw0rd
volumes:
  sqlserver_data:
